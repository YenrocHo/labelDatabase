<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.aden.mapper.auto.process.TSysProductMapper">
    <resultMap id="BaseResultMap" type="com.fc.aden.model.custom.process.TSysProduct">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="items_code" jdbcType="VARCHAR" property="itemsCode"/>
        <result column="product_code" jdbcType="VARCHAR" property="productCode"/>
        <result column="product" jdbcType="VARCHAR" property="product"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="english_name" jdbcType="VARCHAR" property="englishName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="food_name" jdbcType="VARCHAR" property="foodName"/>
    </resultMap>
    <resultMap id="BaseResultAllMap" type="com.fc.aden.model.po.ProductPo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="items_code" jdbcType="VARCHAR" property="itemsCode"/>
        <result column="product_code" jdbcType="VARCHAR" property="productCode"/>
        <result column="product" jdbcType="VARCHAR" property="product"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="english_name" jdbcType="VARCHAR" property="englishName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="food_name" jdbcType="VARCHAR" property="foodName"/>

        <collection property="productStores" ofType="com.fc.aden.model.po.ProductStorePo">
            <result column="product_id" property="productId" jdbcType="VARCHAR"/>
            <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
            <result column="store_name" property="storeName" jdbcType="VARCHAR"/>
            <result column="shelf_life" property="shelfLife" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>


    <sql id="Base_Column_List">
    id, items_code,product_code,product,name,english_name,status,create_time, update_time,food_name
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_product
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByProduct" parameterType="com.fc.aden.model.custom.process.TSysProduct" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_product
        where product = #{product,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_sys_product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <!--根据食品种类id删除-->
    <delete id="deleteByFoodId" parameterType="java.lang.String">
    delete from t_sys_product
    where food_name = #{foodName,jdbcType=VARCHAR}
  </delete>
    <insert id="insertSelective" parameterType="com.fc.aden.model.custom.process.TSysProduct">
    insert into t_sys_product (id,items_code,product_code,product, name,english_name,status,create_time, update_time, food_name)
    values (#{id,jdbcType=VARCHAR},#{itemsCode,jdbcType=VARCHAR},#{productCode,jdbcType=VARCHAR},#{product,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR}, #{englishName,jdbcType=INTEGER},#{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
     #{updateTime,jdbcType=TIMESTAMP},#{foodName,jdbcType=INTEGER})
  </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.aden.model.custom.process.TSysProduct">
        update t_sys_product
        <set>
            <if test="itemsCode != null">
                items_code = #{itemsCode,jdbcType=VARCHAR},
            </if>
            <if test="productCode != null">
                product_code = #{itemsCode,jdbcType=VARCHAR},
            </if>
            <if test="product != null">
                product = #{product,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="englishName != null">
                english_name = #{englishName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
            <if test="foodName != null">
                food_name = #{foodName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.aden.model.custom.process.TSysProduct">
    update t_sys_product
    set
      items_code = #{itemsCode,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      product = #{product,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now(),
      food_name = #{foodName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectList" resultMap="BaseResultMap" parameterType="com.fc.aden.vo.ProductVO">
        select
        <include refid="Base_Column_List"/>
        from t_sys_product
    </select>
    <select id="selectProductBycName" resultType="int" parameterType="string">
        select
        count(1)
        from t_sys_product
        where 1=1
        <if test="product!=null and product!=''">
            and product = #{product,jdbcType=VARCHAR}
        </if>
        <if test="itemsCode!=null and itemsCode!=''">
            and items_code = #{itemsCode,jdbcType=VARCHAR}
        </if>
    </select>
    <delete id="deleteProductByIds" parameterType="map">
        delete
        from t_sys_product
        where id in
        <foreach collection="productIdList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--根据项目点编号查询-->
    <select id="selectListByItems" parameterType="com.fc.aden.model.custom.process.TSysProduct"
            resultMap="BaseResultMap">
        select p.id as id,
        p.product as product,
        p.create_time as create_time,
        p.items_code as items_code,
        p.update_time as update_time,
        f.food as food_name<!--foodName 是列的别名，对应BaseResultMap 的cloumn的值-->
        from t_sys_product p,t_sys_food f
        where p.food_name = f.food_code
        <if test="searchTxt != null and searchTxt !=''">
            and p.product like CONCAT('%', #{searchTxt, jdbcType=VARCHAR}, '%') or p.english_name like CONCAT('%',
            #{searchTxt, jdbcType=VARCHAR}, '%')
        </if>
        and p.items_code = #{itemsCode}
        order by p.update_time desc
    </select>
    <select id="findByProduct" parameterType="com.fc.aden.model.custom.process.TSysProduct" resultMap="BaseResultMap">
        select p.id as id,
        p.product as product,
        p.create_time as create_time,
        p.items_code as items_code,
        p.update_time as update_time,
        f.food as food_name<!--foodName 是列的别名，对应BaseResultMap 的cloumn的值-->
        from t_sys_product p,t_sys_food f
        where p.food_name = f.food_code
        <if test="searchTxt != null and searchTxt !=''">
            and p.product like CONCAT('%', #{searchTxt, jdbcType=VARCHAR}, '%') or p.english_name like CONCAT('%',
            #{searchTxt, jdbcType=VARCHAR}, '%')
        </if>
        <if test="itemsCode != null and itemsCode !=''">
            and p.items_code like CONCAT('%', #{itemsCode, jdbcType=VARCHAR}, '%')
        </if>
        order by p.update_time desc
    </select>

    <update id="updateStatusById" parameterType="map">
        update t_sys_product
        set
        <choose>
            <when test="status == 1">
                status = 0
            </when>
            <when test="status == 0">
                status = 1
            </when>
        </choose>
        where id = #{id}
    </update>
    <select id="selectProductList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_product

        <where>
            <if test="keyword != null">
                name like #{keyword,jdbcType=VARCHAR}
            </if>
            <if test="itemsCode != null">
                and items_code like #{itemsCode,jdbcType=VARCHAR}
            </if>
            <if test="foodCode != null">
                and food_name like #{foodCode,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="selectAllProductList" resultMap="BaseResultAllMap">
        SELECT
        spr.*,
        sps.product_id,
        sps.store_id,
        sps.store_name,
        sps.shelf_life

        FROM
        t_sys_product spr
        LEFT JOIN (
        SELECT ps.store_id,ps.product_id, store.NAME as store_name, ps.shelf_life FROM t_sys_product_store ps
        LEFT JOIN t_sys_store store
        ON ps.store_id = store.id
        ) sps
        ON spr.id = sps.product_id
        <where>
            <if test="keyword != null and keyword !=''">
                spr.name like #{keyword,jdbcType=VARCHAR}
            </if>
            <if test="itemsCode != null and itemsCode !=''">
                and spr.items_code like #{itemsCode,jdbcType=VARCHAR}
            </if>
            <if test="foodCode != null and foodCode !=''">
                and spr.food_name like #{foodCode,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="selectItemsCode" resultType="int" parameterType="string">
    select
    count(1)
            from t_sys_product
         where items_code = #{itemsCode}
    </select>
</mapper>